---
import type { CollectionEntry } from "astro:content";
import Badge from "@/components/Badge.astro";
import FeatureHeader from "@/components/FeatureHeader.astro";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueTags, groupPostsByYear } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_POSTS_PER_PAGE = 5;
	const MAX_TAGS = 20;
	const allPosts = await getAllPosts();
	const uniqueTags = getUniqueTags(allPosts).slice(0, MAX_TAGS);
	return paginate(allPosts.sort(collectionDateSort), {
		pageSize: MAX_POSTS_PER_PAGE,
		props: { uniqueTags },
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"post">>;
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	description: "Read my collection of posts and the things that interest me",
	title: "Writing",
};

const paginationProps = {
	prevUrl: page.url.prev,
	nextUrl: page.url.next,
};

const groupedByYear = groupPostsByYear(page.data);
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
---

<PageLayout meta={meta}>
	<FeatureHeader
		rssFeed="/rss.xml"
		heading="Writing"
		subheading="Sometimes I opine on my intellectual and ideological commitments"
		disclaimer="/writing/#disclaimer"
	/>

	<div class="grid gap-y-8 sm:grid-cols-[1fr_auto] sm:gap-x-8">
		<section aria-label="Blog post list" class="grow">
			{
				descYearKeys.map((yearKey) => (
					<>
						<h4 class="title">{yearKey}</h4>
						<ul class="mb-8 mt-4 space-y-8 text-start">
							{groupedByYear[yearKey]?.map((p) => (
								<li class="grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2">
									<PostPreview post={p} withDesc={true} />
								</li>
							))}
						</ul>
					</>
				))
			}
		</section>
		{
			!!uniqueTags.length && (
				<aside class="md:min-w-[14rem] md:max-w-[14rem] md:basis-[14rem]">
					<h4 class="title mb-4 flex gap-2">
						Tags
						{/*
						<Icon aria-hidden="true" class="mb-1 h-6 w-6" focusable="false" name="ei:tag" />
						*/}
					</h4>
					<ul class="flex flex-wrap gap-2">
						{uniqueTags.map((tag) => (
							<li>
								<a aria-label={`View all posts with the tag: ${tag}`} href={`/tags/${tag}`}>
									<Badge variant="muted" title={tag} />
								</a>
							</li>
						))}

						<span class="ms-auto inline-flex h-6 items-center text-base sm:text-end">
							<a
								aria-label="View all blog categories"
								class="font-medium text-accent sm:hover:text-accent-two"
								href="/tags/"
							>
								View all →
							</a>
						</span>
					</ul>
					{/*
					<span class="mt-4 block sm:text-end">
						<a
							aria-label="View all blog categories"
							class="font-medium text-accent sm:hover:text-accent-two"
							href="/tags/"
						>
							View all →
						</a>
					</span>
					*/}
				</aside>
			)
		}
	</div>

	<Pagination {...paginationProps} />

	<div class="mt-6 sm:mt-8">
		<p class="outline-(--theme-color-250) flex p-2 text-xs target:outline-dashed" id="disclaimer">
			<span class="mr-4 inline-block">&sect;</span>
			The content on this site reflects my own opinion and not necessarily those of any employer. Links
			from this site don't constitute endorsements, and I disclaim any responsibility for the accuracy
			or suitability for any purpose of any content posted by any third party.
		</p>
	</div>
</PageLayout>
