---
import { type CollectionEntry, getCollection } from "astro:content";
import FeatureHeader from "@/components/FeatureHeader.astro";
import Pagination from "@/components/Paginator.astro";
import NotePreview from "@/components/note/NotePreview.astro";
import { getAllNotes } from "@/data/note";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_NOTES_PER_PAGE = 5;
	const allNotes = await getAllNotes();
	return paginate(allNotes.sort(collectionDateSort), {
		pageSize: MAX_NOTES_PER_PAGE,
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"note">>;
	uniqueTags: string[];
}

const { page } = Astro.props;

const meta = {
	description: "Read my collection of notes",
	title: "Notes",
};

const paginationProps = {
	prevUrl: page.url.prev,
	nextUrl: page.url.next,
};
---

<PageLayout meta={meta}>
	<section>
		<FeatureHeader
			heading="Notes"
			subheading="An assortment of thoughts on how to utilize technology"
			rssFeed="/notes/rss.xml"
		/>
		<div class="grid grid-cols-1 gap-8 md:grid-cols-2">
			{
				page.data.map((note) => (
					<div>
						<NotePreview note={note} as="h4" />
					</div>
				))
			}
		</div>

		<Pagination {...paginationProps} />
	</section>
</PageLayout>
