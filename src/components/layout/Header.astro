---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks, socialLinks, siteConfig } from "@/site.config";
import { Icon } from "astro-icon/components";
---

<header
	id="main-header"
	class="fixed left-0 top-0 z-20 flex h-16 w-full items-center overflow-hidden bg-bgColor px-4 md:relative md:bg-transparent md:px-0"
>
	<div class="w-full justify-between sm:flex-col">
		<div class="flex items-center gap-x-2">
			<a
				aria-label={siteConfig.title}
				aria-current={Astro.url.pathname === "/" ? "page" : false}
				class="group flex h-8 items-center hover:filter-none sm:relative"
				href="/"
			>
				<strong
					class="font-regular mb-0.5 italic text-accent-two hover:text-accent-one xs:block md:text-xl md:font-medium"
				>
					{siteConfig.title}
				</strong>
			</a>
			<nav
				aria-label="Main menu"
				class="top-20 mx-auto ml-4 ml-auto hidden flex-col items-end justify-center gap-x-4 rounded-md bg-bgColor text-sm font-medium text-accent-two shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:flex-row sm:items-center sm:rounded-none sm:bg-transparent sm:shadow-none sm:backdrop-blur-none md:flex"
				id="main-navigation-menu"
			>
				{
					menuLinks.map((link) => (
						<a
							aria-current={Astro.url.pathname === link.path ? "page" : false}
							class="underline-offset-2 hover:underline"
							data-astro-prefetch
							href={link.path}
						>
							{link.title}
						</a>
					))
				}
			</nav>

			<div class="ml-auto w-fit">
				<div id="buttons-panel" class="top-4 -ml-[4.5rem] flex space-x-2 md:top-8">
					<Search />
					<ThemeToggle />
				</div>
			</div>

			<mobile-button
				aria-expanded="false"
				aria-haspopup="menu"
				aria-role="button"
				aria-label="Open main menu"
				class="group relative h-8 w-8 rounded-lg bg-color-100 text-accent-base hover:bg-accent-base/10 md:invisible md:hidden"
				id="toggle-nav-menu-mobile"
				type="button"
			>
				<Icon
					id="open-nav-menu-icon"
					aria-hidden="true"
					class="absolute start-1/2 top-1/2 h-6 w-6 -translate-x-1/2 -translate-y-1/2 scale-100 opacity-100 transition-all"
					focusable="false"
					name="ei:navicon"
				/>
				<Icon
					id="close-nav-menu-icon"
					aria-hidden="true"
					class="absolute start-1/2 top-1/2 h-6 w-6 -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all"
					focusable="false"
					name="ei:close"
				/>
			</mobile-button>
		</div>
	</div>
</header>

<div id="drawer" class="fixed inset-0 z-10 hidden" aria-hidden="true">
	<div
		id="drawer-body"
		class="absolute inset-0 -translate-y-full transform bg-bgColor transition-all duration-300 ease-in-out"
	>
		<nav
			aria-label="Mobile navigation menu"
			class="absolute inset-0 flex flex-col items-center justify-center gap-y-4 text-center text-lg font-medium text-accent-two"
			id="nav-menu-mobile"
		>
			{
				menuLinks.map((link) => (
					<a
						aria-current={Astro.url.pathname === link.path ? "page" : false}
						class="underline-offset-2 hover:underline"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
			<hr />
			{
				socialLinks.map((link) => (
					<a class="underline-offset-2 hover:underline" href={link.path}>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
</div>

<script>
	// Wait for the content to fully load
	document.addEventListener("DOMContentLoaded", () => {
		const buttonsPanel = document.getElementById("buttons-panel");

		if (buttonsPanel) {
			buttonsPanel.classList.add("fixed");
			console.log("Class 'fixed' added to the buttons-panel element.");
		} else {
			console.error("Element with ID 'buttons-panel' not found.");
		}
	});
</script>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const toggleNavMenuMobileButton = document.getElementById("toggle-nav-menu-mobile");
		const openMenuIcon = document.getElementById("open-nav-menu-icon");
		const closeMenuIcon = document.getElementById("close-nav-menu-icon");
		const drawer = document.getElementById("drawer");

		//
		if (!toggleNavMenuMobileButton || !openMenuIcon || !closeMenuIcon || !drawer) {
			console.error("One or more required elements are missing in the DOM.");
			return;
		}

		const drawerBody = document.getElementById("drawer-body");
		if (!drawerBody) {
			console.error("Drawer body element is missing in the DOM.");
			return;
		}

		toggleNavMenuMobileButton.addEventListener("click", () => {
			const isOpen = toggleNavMenuMobileButton.getAttribute("aria-expanded") === "true";

			if (isOpen) {
				//
				drawerBody.classList.add("opacity-0", "-translate-y-full");
				drawerBody.classList.remove("translate-y-0");

				//
				setTimeout(() => {
					drawer.classList.add("hidden");
				}, 300);

				//
				openMenuIcon.classList.add("scale-100", "opacity-100");
				closeMenuIcon.classList.add("scale-0", "opacity-0");
				closeMenuIcon.classList.remove("scale-100", "opacity-100");
			} else {
				//
				drawer.classList.remove("hidden");
				drawerBody.classList.add("translate-y-0");
				drawerBody.classList.remove("opacity-0", "-translate-y-full");

				//
				openMenuIcon.classList.add("scale-0", "opacity-0");
				closeMenuIcon.classList.add("scale-100", "opacity-100");
				openMenuIcon.classList.remove("scale-100", "opacity-100");
			}

			//
			toggleNavMenuMobileButton.setAttribute("aria-expanded", (!isOpen).toString());
		});
	});
</script>
