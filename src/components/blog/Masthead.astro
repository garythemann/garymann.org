---
import { type CollectionEntry, getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

import DraftIndicator from "./MastheadCoverImage.astro";
import MastheadDates from "./MastheadDates.astro";
import MastheadCoverImage from "./MastheadCoverImage.astro";
import MastheadDescription from "./MastheadDescription.astro";
import MastheadTags from "./MastheadTags.astro";

interface Props {
	content: CollectionEntry<"post">;
}

const { content } = Astro.props;

const { publishDate, coverImage, seriesId, tags, updatedDate, title, description, draft } =
	content.data;

// console.log("data:", data); // Debug
// console.log("headings:", content.rendered?.metadata?.headings); // Debug
// console.log("Post frontmatter:", content.rendered?.metadata?.frontmatter); // Debug

const postSeries = seriesId
	? await getCollection("series")
			.then((series) => series.find((s) => s.id === seriesId))
			.catch((err) => {
				console.error("Failed to find series:", err);
				return null;
			})
	: null;
---

<div class="flex items-end md:sticky md:top-8 md:z-10">
	{
		postSeries ? (
			<button
				id="toggle-panel"
				class="mr-2 hidden h-8 w-8 flex-shrink-0 items-center justify-center rounded-lg bg-accent-base/10 text-accent-base hover:brightness-110 md:flex"
				aria-label="Toggle Series Panel"
				aria-controls="series-panel"
			>
				{/*
				<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="hugeicons:sidebar-left" />
				*/}
				<Icon
					aria-hidden="true"
					class="h-6 w-6 flex-shrink-0"
					focusable="false"
					name="solar:notes-bold"
				/>
			</button>
		) : null
	}

	<h1
		class="display title ml-2 md:sticky md:top-4 md:z-20 md:max-w-[calc(100%-10rem)]"
		title={title}
		data-pagefind-body
	>
		{title}
	</h1>
</div>

<MastheadDates
	publishDate={publishDate}
	updatedDate={updatedDate}
	readingTime={content.rendered?.metadata?.frontmatter?.readingTime}
/>

<DraftIndicator draft={draft} />
<MastheadCoverImage coverImage={coverImage} />
<MastheadDescription description={description} />
<MastheadTags
	tags={tags}
	postSeries={postSeries && { title: postSeries.data.title, id: postSeries.id }}
/>
