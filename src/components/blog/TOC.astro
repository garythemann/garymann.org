---
import { generateToc } from "@/utils/generateToc";
import type { MarkdownHeading } from "astro";
import { Icon } from "astro-icon/components";
import TOCHeading from "./TOCHeading.astro";

interface Props {
	headings: MarkdownHeading[];
	open?: boolean;
}

const { headings, open } = Astro.props;

const toc = generateToc(headings);
---

<div class="sticky top-20 rounded-lg border border-special-light bg-color-75">
	<details open={open} class="open:float-r p-3 [&_svg]:open:-rotate-180">
		<summary class="cursor-pointer select-none list-none">
			<div class="flex items-center justify-between gap-x-1">
				<h4 class="content-center font-semibold">Table of Contents</h4>
				<Icon
					aria-hidden="true"
					class="h-4 w-4 transition-all"
					focusable="false"
					name="ei:chevron-down"
				/>
			</div>
		</summary>
		<div class="h-auto max-h-[calc(100vh-11rem)] overflow-hidden overflow-y-auto px-8">
			<ul class="text-sm font-medium text-textColor">
				{toc.map((heading) => <TOCHeading heading={heading} />)}
			</ul>
		</div>
	</details>
</div>
