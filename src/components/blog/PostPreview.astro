---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;
---

<div
	class={withDesc
		? "flex flex-col"
		: "flex flex-col grow sm:flex-row sm:items-center sm:justify-between"}
>
	{
		!withDesc ? (
			<>
				<FormattedDate
					class="shrink-0 text-sm text-lighter sm:order-2 sm:text-right"
					date={post.data.publishDate}
					dateTimeOptions={{
						// hour: "2-digit",
						// minute: "2-digit",
						year: "numeric",
						month: "long",
						day: "2-digit",
					}}
				/>
				<div class="font-medium text-accent-base sm:order-1 sm:flex-grow md:line-clamp-1">
					<a
						data-astro-prefetch
						class="underline-offset-2 hover:underline"
						href={`/writing/${post.id}/`}
					>
						{post.data.draft && <span class="text-red-500">(Draft) </span>}
						{post.data.title}
					</a>
				</div>
			</>
		) : (
			<>
				<FormattedDate
					class="shrink-0 text-sm text-lighter"
					date={post.data.publishDate}
					dateTimeOptions={{
						// hour: "2-digit",
						// minute: "2-digit",
						year: "numeric",
						month: "long",
						day: "2-digit",
					}}
				/>
				<div class="font-medium text-accent-base sm:flex-grow md:line-clamp-1">
					<a
						data-astro-prefetch
						class="underline-offset-2 hover:underline"
						href={`/writing/${post.id}/`}
					>
						{post.data.title}
					</a>
				</div>
				<p class="mt-0.5 line-clamp-2">{post.data.description}</p>
			</>
		)
	}
</div>
