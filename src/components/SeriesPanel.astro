---
import { type CollectionEntry, getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

const { seriesId } = Astro.props;
const currentPath = Astro.url.pathname;

const posts = await getCollection("post");
const series = await getCollection("series");

//     `seriesId`
const postsSeries = series.find((s) => s.id === seriesId);
if (!postsSeries) {
	throw new Error(`Post(s) with Series ID '${seriesId}' not found.`);
}
// console.log("Post(s) Series:", postsSeries); // Debug.

let seriesPosts: CollectionEntry<"post">[] = [];
if (seriesId) {
	seriesPosts = posts
		.filter((p) => p.data.seriesId === seriesId)
		.sort((a, b) => (a.data.orderInSeries || 0) - (b.data.orderInSeries || 0));
}
---

<aside
	id="series-panel"
	class="`shadow-[5px_0px_10px_rgba(0,0,0,0.05)]` fixed z-40 grid hidden min-h-screen bg-bgColor transition-all duration-300 ease-in-out lg:relative lg:block"
>
	<div
		class="fixed top-0 -z-10 h-screen w-screen bg-gradient-to-b from-orange-300 via-pink-300 to-purple-300 opacity-30 dark:opacity-10 md:w-72 md:min-w-72 md:max-w-72"
	>
	</div>

	<div
		class="flex h-full w-screen flex-col border-r border-special-light bg-accent-base/5 px-8 pt-4 md:w-72 md:min-w-72 md:max-w-72 md:pt-8"
	>
		<div class="flex gap-x-1">
			<div class="max-width flex-grow"></div>

			<button
				id="close-panel"
				class="flex h-8 w-8 items-center justify-center rounded-lg bg-accent-base/5 text-accent-base hover:bg-accent-base/10 md:right-8 md:top-8"
				aria-label="Close Series Panel"
			>
				<Icon class="h-6 w-6" name="ei:close" />
			</button>
		</div>
		<div class="sticky top-8">
			<div class="mb-2 mt-4 flex items-center text-sm font-semibold uppercase text-accent-base">
				A series on
			</div>
			{
				postsSeries.id ? (
					<>
						<a
							href={`/series/${postsSeries.id}`}
							aria-label={`About ${postsSeries.data.title} series`}
							class="sticky top-4 flex h-8 w-full items-center justify-center gap-x-1 rounded-lg bg-accent-base font-medium text-bgColor shadow-lg transition-all duration-300 hover:brightness-110"
						>
							{postsSeries.data.title}
						</a>

						<ul class="mt-[1.0625rem] text-sm font-medium text-light">
							{seriesPosts.map((p) => {
								const isActive = currentPath === `/writing/${p.id}/`;
								return (
									<li
										class={`line-clamp-2 flex items-center px-4 pb-1 pt-1 ${isActive ? "rounded-lg bg-color-100" : ""}`}
									>
										<a
											href={`/writing/${p.id}/`}
											class={`hover:text-accent-two ${isActive ? "pointer-events-none cursor-default text-accent" : ""}`}
										>
											{p.data.title}
										</a>
									</li>
								);
							})}
						</ul>
					</>
				) : null
			}
		</div>
	</div>
</aside>
